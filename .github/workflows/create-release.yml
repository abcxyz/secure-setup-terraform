# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: 'create-release'

on:
  push:
    branches:
      - 'main'

permissions:
  contents: 'write'
  id-token: 'write'

# only one release should run at a time
concurrency:
  group: '${{ github.workflow_ref }}'

jobs:
  read_version:
    runs-on: 'ubuntu-latest'
    if: |-
      ${{ startsWith(github.event.head_commit.message, 'chore: [automated] Terraform checksum updates') }}
    outputs:
      version: '${{ steps.version.outputs.version }}'
    steps:
      - uses: 'actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683' # ratchet:actions/checkout@v4

      - id: 'version'
        run: |-
          echo version="$(cat VERSION)" >> "${GITHUB_OUTPUT}"

  create-tag:
    runs-on: 'ubuntu-latest'
    needs: 'read_version'
    # Only running the job when the triggering branch is the default branch.
    if: |-
      ${{ github.ref_name == github.event.repository.default_branch }}
    outputs:
      result: '${{ steps.create-tag.outputs.result }}'
    steps:
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@6fc4af4b145ae7821d527454aa9bd537d1f2dc5f' # ratchet:google-github-actions/auth@v2
        with:
          create_credentials_file: false
          export_environment_variables: false
          workload_identity_provider: '${{ vars.TOKEN_MINTER_WIF_PROVIDER }}'
          service_account: '${{ vars.TOKEN_MINTER_WIF_SERVICE_ACCOUNT }}'
          token_format: 'id_token'
          id_token_audience: '${{ vars.TOKEN_MINTER_SERVICE_AUDIENCE }}'
          id_token_include_email: true

      - name: 'mint token'
        id: 'mint-token'
        uses: 'abcxyz/github-token-minter/.github/actions/minty@d77232d398991e3a2bb8535871e6a08a08aaab34' # ratchet:abcxyz/github-token-minter/.github/actions/minty@main
        with:
          id_token: '${{ steps.auth.outputs.id_token }}'
          service_url: '${{ vars.TOKEN_MINTER_SERVICE_URL }}'
          requested_permissions: |-
            {
              "scope": "create-release",
              "repositories": ["${{ github.event.repository.name }}"],
              "permissions": {
                "contents": "write"
              }
            }

      - id: 'create-tag'
        env:
          TAG: 'v${{ needs.read_version.outputs.version }}'
        uses: 'actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea' # ratchet:actions/github-script@v7
        with:
          github-token: '${{ steps.mint-token.outputs.token }}'
          retries: '3'
          result-encoding: 'string'
          script: |-
            const tag = process.env.TAG
            const sha = '${{ github.sha }}'

            const result = await github.rest.git.createTag({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag: tag,
              object: sha,
              type: 'commit',
              message: tag,
            });
            core.info(JSON.stringify(result))

            // Create a reference for annotated tag. See reference:
            // https://docs.github.com/en/rest/git/tags?apiVersion=2022-11-28#create-a-tag-object
            const result2 = await github.rest.git.createRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: `refs/tags/${tag}`,
                sha: sha,
            })
            core.info(JSON.stringify(result2))

            return `Created release tag (${tag}) @ commit (${sha}).`
